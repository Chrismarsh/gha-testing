name: Build all
on:
  workflow_dispatch:

jobs:

  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: set-matrix
        run: |
          TASKS=$(echo $(cat .github/workflows/matrix.json) | sed 's/ //g' )
          echo "::set-output name=matrix::$TASKS"
  setup:
    needs: [matrix]
    runs-on: ${{ inputs.matrix.matrix.cfg.os }}
    strategy:
      matrix:
        cfg: ${{ fromJson(needs.matrix.outputs.matrix) }}
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install yq
        if: startsWith( inputs.matrix.matrix.cfg.os, 'macos' )
        run: |
          export PATH="$pythonLocation:$PATH"
          brew install yq

      - name: env linux
        if: startsWith( inputs.matrix.matrix.cfg.os, 'ubuntu' )
        uses: allenevans/set-env@v2.0.0
        with:
          CONAN_GCC_VERSIONS: ${{ inputs.matrix.matrix.cfg.version }}
          CC: gcc-${{ inputs.matrix.matrix.cfg.version }}
          CXX: g++-${{ inputs.matrix.matrix.cfg.version }}
          GFORTRAN_NAME: gfortran-${{ inputs.matrix.matrix.cfg.version }}

      - name: env macos
        if: startsWith( inputs.matrix.matrix.cfg.os, 'macos' )
        uses: allenevans/set-env@v2.0.0
        with:
          CONAN_APPLE_CLANG_VERSIONS: ${{ inputs.matrix.matrix.cfg.version }}
          GFORTRAN_NAME: gfortran-10

  build_all:
    needs: [matrix, setup]
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      matrix:
        cfg: ${{ fromJson(needs.matrix.outputs.matrix) }}
    steps:
      - run: |
          for x in $(find . -not -path '*/.*'  -not -path '.' -type d -maxdepth 1 | sed "s|^\./||")
          do
            cd $x
            for v in $(yq e '.sources | keys' conandata.yml | awk '{ print $NF }' | sed 's/\"//g')
            do
              echo "$x/$v"
            done
            cd ..
          done

